{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSortBy","goods","visibleGoods","sort","good1","good2","ALPABET","localeCompare","LENGTH","length","reverse","getReorderedGoods","className","type","classNames","onClick","map","item","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAqCE,IAAME,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,mBAASH,EAASM,MAAhD,mBAAOC,EAAP,KAAiBC,EAAjB,KAOMC,EAnCD,SACLA,EADK,GAGJ,IADCF,EACF,EADEA,SAAUH,EACZ,EADYA,WAENM,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQN,GACN,KAAMP,EAASc,QACb,OAAOF,EAAMG,cAAcF,GAE7B,KAAMb,EAASgB,OACb,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAITb,GACFM,EAAaQ,UAGRR,EAYOS,CAAkBlB,EAAiB,CAAEM,WAAUH,eAE7D,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SAAU,aAAc,CACtB,WAAYf,IAAaP,EAASc,UAGtCS,QAAS,kBAAMf,EAAUR,EAASc,UAPpC,iCAYA,wBACEO,KAAK,SACLD,UAAWE,IACT,SAAU,aAAc,CACtB,WAAYf,IAAaP,EAASgB,SAGtCO,QAAS,kBAAMf,EAAUR,EAASgB,SAPpC,4BAYA,wBACEK,KAAK,SACLD,UAAWE,IAAW,SAAU,aAAc,CAC5C,YAAalB,IAEfmB,QAAS,kBAAMlB,GAAYD,IAL7B,sBASEG,IAAaP,EAASM,OACJ,IAAfF,IAED,wBACEiB,KAAK,SACLD,UAAU,4BACVG,QAjDQ,WAClBlB,GAAW,GACXG,EAAUR,EAASM,OA4CX,sBASN,6BACE,6BACGG,EAAMe,KAAI,SAACC,GAAD,OACT,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,cClHpCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.17c6f47e.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case (SortType.ALPABET):\n        return good1.localeCompare(good2);\n\n      case (SortType.LENGTH):\n        return good1.length - good2.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortBy] = useState(SortType.NONE);\n\n  const handleReset = () => {\n    setReverse(false);\n    setSortBy(SortType.NONE);\n  };\n\n  const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={classNames(\n            'button', 'is-success', {\n              'is-light': sortType !== SortType.ALPABET,\n            },\n          )}\n          onClick={() => setSortBy(SortType.ALPABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames(\n            'button', 'is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => setSortBy(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={classNames('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n          onClick={() => setReverse(!isReversed)}\n        >\n          Reverse\n        </button>\n        {(sortType !== SortType.NONE\n          || isReversed === true)\n          && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleReset}\n            >\n              Reset\n            </button>\n          )}\n      </div>\n      <ul>\n        <ul>\n          {goods.map((item) => (\n            <li data-cy=\"Good\" key={item}>{item}</li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}